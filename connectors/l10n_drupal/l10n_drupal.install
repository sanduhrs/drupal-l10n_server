<?php

declare(strict_types=1);

/**
 * @file
 * Install, update, and uninstall functions for Localization server connector for Drupal module.
 */

/**
 * Implements hook_requirements().
 */
function l10n_drupal_requirements($phase) {
  return;
  $requirements = array();
  // Ensure translations don't break at install time.
  $t = get_t();

  // Look for Tar library used for compression and uncompression.
  $tar_library = @file_get_contents('Archive/Tar.php', TRUE);
  $tar_available = !empty($tar_library);
  $requirements['l10n_community_tar'] = array(
    'title' => $t('Compression functionality'),
    'value' => $t('Archive/Tar.php available'),
  );
  if (!$tar_available) {
    $requirements['l10n_drupal_tar']['description'] = $t('The PEAR library Archive/Tar.php is missing. Please <a href="@pear">obtain PEAR</a> or a copy of this file and put it on the include path.', array('@pear' => 'http://pear.php.net/'));
    $requirements['l10n_drupal_tar']['severity'] = REQUIREMENT_WARNING;
    $requirements['l10n_drupal_tar']['value'] = $t('Not available');
  }

  if (module_exists('potx')) {
    $requirements['l10n_drupal_potx'] = l10n_drupal_require_potx_with_context();
  }

  return $requirements;
}

/**
 * Check that potx supports context.
 *
 * In its own function, so potx can itself cross-check that l10n_drupal is
 * up to date in its API use.
 */
function l10n_drupal_require_potx_with_context() {
  // If potx is already installed and enabled, check its version by looking at
  // the specific API piece which lets us fingerprint the right version.
  // The 3.x branch introduced _potx_find_t_calls_with_context().

  // Ensure translations don't break at install time.
  $t = get_t();

  module_load_include('inc', 'potx');
  $requirement = array(
    'title' => $t('Translation template extractor'),
    'value' => $t('Localization Server compatible version'),
  );
  if (!function_exists('_potx_find_t_calls_with_context')) {
    $requirement['description'] = $t('The Translation template extractor should be from the 6.x-3.x branch to be compatible with the Localization Server.');
    $requirement['severity'] = REQUIREMENT_ERROR;
    $requirement['value'] = $t('Not compatible with Localization Server');
  }

  return $requirement;
}

/**
 * Implements hook_schema().
 */
function l10n_drupal_schema() {
  $schema = array();

  $schema['l10n_drupal_parsed_module_data'] = array(
    'description' => 'Parsed data for modules (Drupal 8+)',
    'fields' => array(
      'module_name' => array(
        'description' => 'Module name.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'dependencies' => array(
        'description' => 'The module\'s dependencies.',
        'type' => 'text',
        'size' => 'medium',
        'serialize' => TRUE,
      ),
      'parsed_schema' => array(
        'description' => 'The module\'s parsed schema.',
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('module_name'),
  );
  $schema['l10n_drupal_schema_reverse_lookup'] = array(
    'description' => 'A reverse lookup table for finding modules based on schema key',
    'fields' => array(
      'schema_key' => array(
        'description' => 'The schema key',
        'type' => 'varchar',
        'length' => '500',
      ),
      'module_name' => array(
        'description' => 'The array name',
        'type' => 'varchar',
        'length' => '255',
      )
    ),
    'indexes' => array(
      'schema_key' => array('schema_key'),
      'module_name' => array('module_name'),
    ),
  );

  return $schema;
}

/**
 * Install newly required tables potx_parsed_data and potx_schema_reverse_lookup
 */
function l10n_drupal_update_7100() {
  db_create_table('l10n_drupal_parsed_module_data', array(
    'description' => 'Parsed data for modules (Drupal 8+)',
    'fields' => array(
      'module_name' => array(
        'description' => 'Module name.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'dependencies' => array(
        'description' => 'The module\'s dependencies.',
        'type' => 'text',
        'size' => 'medium',
        'serialize' => TRUE,
      ),
      'parsed_schema' => array(
        'description' => 'The module\'s parsed schema.',
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('module_name'),
  ));
  db_create_table('l10n_drupal_schema_reverse_lookup', array(
    'description' => 'A reverse lookup table for finding modules based on schema key',
    'fields' => array(
      'schema_key' => array(
        'description' => 'The schema key',
        'type' => 'varchar',
        'length' => '500',
      ),
      'module_name' => array(
        'description' => 'The array name',
        'type' => 'varchar',
        'length' => '255',
      )
    ),
    'indexes' => array(
      'schema_key' => array('schema_key'),
      'module_name' => array('module_name'),
    ),
  ));
}
